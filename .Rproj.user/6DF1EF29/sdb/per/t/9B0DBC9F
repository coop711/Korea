{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Korea Map WGS84\"\nauthor: \"coop711\"\ndate: '2017 9 20 '\noutput: html_document\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n## Map Data\n\n[통계지리정보서비스](http://sgis.kostat.go.kr) 에서 신청하고 다운로드 승인난 shape 파일을 [mapshaper](https://mapshaper.org) 에서 간략히 한 후 작업에 착수한다.\n\n## Simplified Versions (from [mapshaper](https://mapshaper.org))\n\n### 시도\n\n```{r map data}\nlibrary(maptools) #> `readShapePoly()`, `rgdal::readOGR()`로 대체\nlibrary(GISTools) #> `choropleth`\nlibrary(ggmap) #> `geocode()`, `ggmap()`, `qmap()`, `revgeocode()`\nlibrary(ggplot2) #> `ggplot()`\nlibrary(rgdal) #> `CRS`, `ogrInfo()`, `ogrListLayers()`, `readOGR()`, `spTransform()`\nlibrary(dplyr) #> `arrange()`, `filter()`, `group_by()`, `left_join()`, `mutate()`,  \nlibrary(broom) #> `tidy()`\nlibrary(extrafont) #> \"HCR Dotum LVT\"\noptions(width = 132)\n```\n\n#### Simplified Shape files\n\n```{r}\ngetwd()\nogrInfo(dsn = \"./KOR_adm\",  #> `ogrInfo()`\n        layer = \"KOR_adm0\")\nshp_S_1 <- readOGR(dsn = \"./KOR_adm/\", \n                layer = \"KOR_adm1\",\n                stringsAsFactors = FALSE)\n#                 encoding = \"CP949\")\nogrInfo(dsn = \"./PRK_adm\",  #> `ogrInfo()`\n        layer = \"PRK_adm1\")\nshp_N_1 <- readOGR(dsn = \"./PRK_adm/\", \n                layer = \"PRK_adm1\",\n                stringsAsFactors = FALSE)\n#                 encoding = \"CP949\")\nshp_S_1@data #> data file 이 빈약한 것 확인.\nshp_N_1@data\ndata.frame(shp_S_1)\ndata.frame(shp_N_1)\nclass(shp_S_1)\nclass(shp_N_1)\nsummary(shp_S_1)\nsummary(shp_N_1)\ncoordinates(shp_S_1)\ncoordinates(shp_N_1)\nNames_S <- shp_S_1$NL_NAME_1\nNames_N <- shp_N_1$NL_NAME_1\nshp_S_1$Names_kr <- c(\"부산\", \"충북\", \"충남\", \"대구\", \"대전\", \"강원\", \"광주\", \"경기\", \"경북\",\n                      \"경남\", \"인천\", \"제주\", \"전북\", \"전남\", \"세종\", \"서울\", \"울산\")\nshp_N_1$Names_kr <- c(\"자강\", \"함북\", \"함남\", \"황북\", \"황남\", \"개성\", \"강원\", \"금강\", \"평북\",\n                      \"평남\", \"평양\", \"라선\", \"량강\", \"신의\")\nshp_S_1$Names_kr_old <- c(\"경상\", \"충청\", \"충청\", \"경상\", \"충청\", \"강원\", \"전라\", \"경기\",\n                          \"경상\", \"경상\", \"경기\", \"전라\", \"전라\", \"전라\", \"충청\", \"서울\",\n                          \"경상\")\nshp_N_1$Names_kr_old <- c(\"평안\", \"함길\", \"함길\", \"황해\", \"황해\", \"유후\", \"강원\", \"강원\",\n                          \"평안\", \"평안\", \"평안\", \"함길\", \"함길\", \"평안\")\nshp_S_1$rates <- c(98.9, 33.3, 33.3, 98.9, 33.3, 12.0, 99.1, 98.6, 98.9, 98.9, 98.6, \n                   99.1, 99.1, 99.1, 33.3, 50.7, 98.9)\nshp_N_1$rates <- c(4.5, 1.0, 1.0, 22.3, 22.3, 94.1, 12.0, 12.0, 4.5, \n                   4.5, 4.5, 1.0, 1.0, 4.5)\nindex_S <- shp_S_1$Names_kr %in% c(\"경북\", \"대전\", \"강원\", \"전북\", \"경기\", \"서울\")\nindex_N <- shp_N_1$Names_kr %in% c(\"개성\", \"황북\", \"평남\", \"함남\")\nLon_S <- coordinates(shp_S_1)[, 1]\nLat_S <- coordinates(shp_S_1)[, 2]\nLon_S_1 <- Lon_S[index_S]\nLat_S_1 <- Lat_S[index_S]\nLat_S_1[c(3, 6)] <- Lat_S_1[c(3, 6)] + c(-0.3, 0.2)\nLon_N <- coordinates(shp_N_1)[, 1]\nLat_N <- coordinates(shp_N_1)[, 2]\nLon_N_1 <- Lon_N[index_N]\nLat_N_1 <- Lat_N[index_N]\nlabels_S <- paste(shp_S_1$Names_kr_old[index_S], \n                  paste(shp_S_1$rates[index_S], \"%\", sep = \"\"), sep = \":\")\nlabels_N <- paste(shp_N_1$Names_kr_old[index_N], \n                  paste(shp_N_1$rates[index_N], \"%\", sep = \"\"), sep = \":\")\ncol_S <- c(\"black\", \"white\", \"black\", \"black\", \"black\", \"black\")\ncol_N <- c(\"white\", \"white\", \"black\", \"white\")\n```\n\n#### Simple Plots\n\n```{r, fig.width = 12, fig.height = 12}\nlibrary(extrafont)\npar(mar = c(0, 0, 0, 0))\nplot(shp_S_1, ylim = c(32, 44))\nplot(shp_N_1, add = TRUE)\np_S <- pointLabel(Lon_S, Lat_S, Names_S, offset = 0, cex = 0.5, family = \"HCR Dotum LVT\")\np_N <- pointLabel(Lon_N, Lat_N, Names_N, offset = 0, cex = 0.5, family = \"HCR Dotum LVT\")\n```\n\n```{r, fig.width = 12, fig.height = 12}\n# png(\"./pics/Sejong_map.png\")\n# shades <- shading(breaks = seq(0, 100, by = 0.1), \n#                   cols = colorRampPalette(brewer.pal(11, \"Spectral\"))(1001))\nshades <- shading(breaks = seq(0, 100, by = 0.1), \n                  cols = colorRampPalette(c(\"Red\", \"Pink\", \"Green\", \"Cyan\"))(1001))\n# rates_S_shades <- auto.shading(shp_S_1$rates, cols = rev(brewer.pal(5, \"Greens\")))\n# rates_N_shades <- auto.shading(shp_N_1$rates, cols = rev(brewer.pal(5, \"Greens\")))\n# choropleth(shp_S_1, shp_S_1$rates, shading = rates_S_shades, ylim = c(32, 44))\n# choropleth(shp_N_1, shp_N_1$rates, shading = rates_N_shades, add = TRUE)\npar(mar = c(0, 0, 0, 0), family = \"HCR Dotum LVT\")\nchoropleth(shp_S_1, shp_S_1$rates, shading = shades, ylim = c(32, 44))\nchoropleth(shp_N_1, shp_N_1$rates, shading = shades, add = TRUE)\ntext(Lon_S_1, Lat_S_1, labels = labels_S, col = col_S, cex = 0.8)\ntext(Lon_N_1, Lat_N_1, labels = labels_N, col = col_N, cex = 0.8)\n# choro.legend(1110000, 1600000, AREA.shades)\n# dev.off()\ndev.copy(png, file = \"./pics/Sejong_poll_map.png\", width = 960, height = 960)\ndev.off()\n```\n\n",
    "created" : 1508662407558.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2351227457",
    "id" : "9B0DBC9F",
    "lastKnownWriteTime" : 1508662410,
    "last_content_update" : 1508662410352,
    "path" : "~/Google 드라이브/Works/Class/Data_Science/R.WD/Korea/R/Sejong_map.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}