index_GG <- shp_S_1$Names_kr_old == "경기"
index_GG
shp_GG <- shp_S_1[index_GG, ]
#> Using a zero-width buffer cleans up many toplogical problems in R
shp_GG <- gBuffer(shp_GG, byid = TRUE, width = 0)
plot(shp_GG)
shp_GG_u <- gUnaryUnion(shp_GG)
plot(shp_GG_u)
par(mar = c(0, 0, 0, 0))
plot(shp_HG_u, xlim = c(123, 132), ylim = c(32, 44))
plot(shp_PA_u, add = TRUE)
plot(shp_HH_u, add = TRUE)
plot(shp_GW, add = TRUE)
plot(shp_GG_u, add = TRUE)
plot(shp_CC_u, add = TRUE)
plot(shp_JL_u, add = TRUE)
plot(shp_GS_u, add = TRUE)
plot(shp_SL, add = TRUE)
a <- gUnion(shp_HG_u, shp_PA_u)
plot(a)
?spRbind
a <- rbind(shp_HG_u, shp_PA_u)
a <- spRbind(shp_HG_u, shp_PA_u)
a <- cbind(shp_HG_u, shp_PA_u)
a <- spCbind(shp_HG_u, shp_PA_u)
choropleth(shp_S_1, shp_S_1$rates, shading = shades, ylim = c(32, 44))
choropleth(shp_N_1, shp_N_1$rates, shading = shades, add = TRUE)
text(Lon_S_1, Lat_S_1, labels = labels_S, col = col_S, cex = 0.8)
text(Lon_N_1, Lat_N_1, labels = labels_N, col = col_N, cex = 0.8)
par(mar = c(0, 0, 0, 0))
plot(shp_HG_u, xlim = c(123, 132), ylim = c(32, 44))
plot(shp_PA_u, add = TRUE)
plot(shp_HH_u, add = TRUE)
plot(shp_GW, add = TRUE)
plot(shp_GG_u, add = TRUE)
plot(shp_CC_u, add = TRUE)
plot(shp_JL_u, add = TRUE)
plot(shp_GS_u, add = TRUE)
plot(shp_SL, add = TRUE)
index_YH <- shp_S_1$Names_kr_old == "유후"
shp_YH <- shp_S_1[index_YH, ]
par(mar = c(0, 0, 0, 0))
plot(shp_HG_u, xlim = c(123, 132), ylim = c(32, 44))
plot(shp_PA_u, add = TRUE)
plot(shp_HH_u, add = TRUE)
plot(shp_GW, add = TRUE)
plot(shp_GG_u, add = TRUE)
plot(shp_CC_u, add = TRUE)
plot(shp_JL_u, add = TRUE)
plot(shp_GS_u, add = TRUE)
plot(shp_SL, add = TRUE)
plot(shp_YH, add = TRUE)
plot(shp_HG_u, xlim = c(123, 132), ylim = c(32, 44), fill = "red")
par(mar = c(0, 0, 0, 0))
plot(shp_HG_u, xlim = c(123, 132), ylim = c(32, 44), fill = "red")
plot(shp_PA_u, add = TRUE)
plot(shp_HH_u, add = TRUE)
plot(shp_GW, add = TRUE)
plot(shp_GG_u, add = TRUE)
plot(shp_CC_u, add = TRUE)
plot(shp_JL_u, add = TRUE)
plot(shp_GS_u, add = TRUE)
plot(shp_SL, add = TRUE)
plot(shp_YH, add = TRUE)
plot(shp_HG_u, xlim = c(123, 132), ylim = c(32, 44), col = "red")
par(mar = c(0, 0, 0, 0))
plot(shp_HG_u, xlim = c(123, 132), ylim = c(32, 44), col = "red")
plot(shp_PA_u, add = TRUE)
plot(shp_HH_u, add = TRUE)
plot(shp_GW, add = TRUE)
plot(shp_GG_u, add = TRUE)
plot(shp_CC_u, add = TRUE)
plot(shp_JL_u, add = TRUE)
plot(shp_GS_u, add = TRUE)
plot(shp_SL, add = TRUE)
plot(shp_YH, add = TRUE)
colorRampPalette(c("Red", "Pink", "Green", "Cyan"))(1001)
pie(rep(1, 1001), col = colorRampPalette(c("Red", "Pink", "Green", "Cyan"))(1001))
pie(rep(1, 11), col = colorRampPalette(c("Red", "Pink", "Green", "Cyan"))(11))
unique(c(shp_S_1$rates, shp_N_1$rates))
unique(c(shp_S_1$rates, shp_N_1$rates)) * 10
cols <- unique(c(shp_S_1$rates, shp_N_1$rates)) * 10
pie(rep(1, 10), col = colorRampPalette(c("Red", "Pink", "Green", "Cyan"))(1001)[cols])
colorRampPalette(c("Red", "Pink", "Green", "Cyan"))(1001)[cols]
names(cols) <- c("GS", "CC", "GW", "JL", "GG", "SL", "PA", "HG", "HH", "YH")
cols
colorRampPalette(c("Red", "Pink", "Green", "Cyan"))(1001)[cols]
cols_hex <- colorRampPalette(c("Red", "Pink", "Green", "Cyan"))(1001)[cols]
cols_hex
names(col_hex) <- names(cols)
names(cols_hex) <- names(cols)
cols_hex
cols_hex["GS"]
cols <- unique(c(shp_S_1$rates, shp_N_1$rates)) * 10
pie(rep(1, 10), col = colorRampPalette(c("Red", "Pink", "Green", "Cyan"))(1001)[cols])
names(cols) <- c("GS", "CC", "GW", "JL", "GG", "SL", "PA", "HG", "HH", "YH")
cols_hex <- colorRampPalette(c("Red", "Pink", "Green", "Cyan"))(1001)[cols]
names(cols_hex) <- names(cols)
cols_hex
par(mar = c(0, 0, 0, 0))
plot(shp_HG_u, xlim = c(123, 132), ylim = c(32, 44), col = cols_hex["HG"])
plot(shp_PA_u, add = TRUE, col = cols_hex["PA"])
plot(shp_HH_u, add = TRUE, col = cols_hex["HH"])
plot(shp_GW, add = TRUE, col = cols_hex["GW"])
plot(shp_GG_u, add = TRUE, col = cols_hex["GG"])
plot(shp_CC_u, add = TRUE, col = cols_hex["CC"])
plot(shp_JL_u, add = TRUE, col = cols_hex["JL"])
plot(shp_GS_u, add = TRUE, col = cols_hex["GS"])
plot(shp_SL, add = TRUE, col = cols_hex["SL"])
plot(shp_YH, add = TRUE, col = cols_hex["YH"])
par(mar = c(0, 0, 0, 0))
plot(shp_HG_u, xlim = c(123, 132), ylim = c(32, 44), col = cols_hex["HG"])
plot(shp_PA_u, add = TRUE, col = cols_hex["PA"])
plot(shp_HH_u, add = TRUE, col = cols_hex["HH"])
plot(shp_GW, add = TRUE, col = cols_hex["GW"])
plot(shp_GG_u, add = TRUE, col = cols_hex["GG"])
plot(shp_CC_u, add = TRUE, col = cols_hex["CC"])
plot(shp_JL_u, add = TRUE, col = cols_hex["JL"])
plot(shp_GS_u, add = TRUE, col = cols_hex["GS"])
plot(shp_SL, add = TRUE, col = cols_hex["SL"])
plot(shp_YH, add = TRUE, col = cols_hex["YH"])
pie(1, col = "#00FFD1")
plot(shp_YH, col = cols_hex["YH"])
plot(shp_YH)
index_YH <- shp_N_1$Names_kr_old == "유후"
shp_YH <- shp_N_1[index_YH, ]
plot(shp_YH)
```{r, fig.width = 12, fig.height = 12}
par(mar = c(0, 0, 0, 0), family = "HCR Dotum LVT")
choropleth(shp_S_1, shp_S_1$rates, shading = shades, ylim = c(32, 44))
choropleth(shp_N_1, shp_N_1$rates, shading = shades, add = TRUE)
text(Lon_S_1, Lat_S_1, labels = labels_S, col = col_S, cex = 0.8)
text(Lon_N_1, Lat_N_1, labels = labels_N, col = col_N, cex = 0.8)
# png("./pics/Sejong_map.png")
# shades <- shading(breaks = seq(0, 100, by = 0.1),
#                   cols = colorRampPalette(brewer.pal(11, "Spectral"))(1001))
shades <- shading(breaks = seq(0, 100, by = 0.1),
cols = colorRampPalette(brewer.pal(11, "RdGy"))(1001))
par(mar = c(0, 0, 0, 0), family = "HCR Dotum LVT")
choropleth(shp_S_1, shp_S_1$rates, shading = shades, ylim = c(32, 44))
choropleth(shp_N_1, shp_N_1$rates, shading = shades, add = TRUE)
text(Lon_S_1, Lat_S_1, labels = labels_S, col = col_S, cex = 0.8)
text(Lon_N_1, Lat_N_1, labels = labels_N, col = col_N, cex = 0.8)
# png("./pics/Sejong_map.png")
# shades <- shading(breaks = seq(0, 100, by = 0.1),
#                   cols = colorRampPalette(brewer.pal(11, "Spectral"))(1001))
shades <- shading(breaks = seq(0, 100, by = 0.1),
cols = colorRampPalette(brewer.pal(11, "RdYlGn"))(1001))
par(mar = c(0, 0, 0, 0), family = "HCR Dotum LVT")
choropleth(shp_S_1, shp_S_1$rates, shading = shades, ylim = c(32, 44))
choropleth(shp_N_1, shp_N_1$rates, shading = shades, add = TRUE)
text(Lon_S_1, Lat_S_1, labels = labels_S, col = col_S, cex = 0.8)
text(Lon_N_1, Lat_N_1, labels = labels_N, col = col_N, cex = 0.8)
# png("./pics/Sejong_map.png")
# shades <- shading(breaks = seq(0, 100, by = 0.1),
#                   cols = colorRampPalette(brewer.pal(11, "Spectral"))(1001))
shades <- shading(breaks = seq(0, 100, by = 0.1),
cols = colorRampPalette(brewer.pal(11, "RdYlBu"))(1001))
par(mar = c(0, 0, 0, 0), family = "HCR Dotum LVT")
choropleth(shp_S_1, shp_S_1$rates, shading = shades, ylim = c(32, 44))
choropleth(shp_N_1, shp_N_1$rates, shading = shades, add = TRUE)
text(Lon_S_1, Lat_S_1, labels = labels_S, col = col_S, cex = 0.8)
text(Lon_N_1, Lat_N_1, labels = labels_N, col = col_N, cex = 0.8)
# png("./pics/Sejong_map.png")
# shades <- shading(breaks = seq(0, 100, by = 0.1),
#                   cols = colorRampPalette(brewer.pal(11, "Spectral"))(1001))
shades <- shading(breaks = seq(0, 100, by = 0.1),
cols = colorRampPalette(brewer.pal(11, "PuOr"))(1001))
par(mar = c(0, 0, 0, 0), family = "HCR Dotum LVT")
choropleth(shp_S_1, shp_S_1$rates, shading = shades, ylim = c(32, 44))
choropleth(shp_N_1, shp_N_1$rates, shading = shades, add = TRUE)
text(Lon_S_1, Lat_S_1, labels = labels_S, col = col_S, cex = 0.8)
text(Lon_N_1, Lat_N_1, labels = labels_N, col = col_N, cex = 0.8)
# choro.legend(1110000, 1600000, AREA.shades)
# png("./pics/Sejong_map.png")
# shades <- shading(breaks = seq(0, 100, by = 0.1),
#                   cols = colorRampPalette(brewer.pal(11, "Spectral"))(1001))
shades <- shading(breaks = seq(0, 100, by = 0.1),
cols = colorRampPalette(brewer.pal(11, "PRGn"))(1001))
par(mar = c(0, 0, 0, 0), family = "HCR Dotum LVT")
choropleth(shp_S_1, shp_S_1$rates, shading = shades, ylim = c(32, 44))
choropleth(shp_N_1, shp_N_1$rates, shading = shades, add = TRUE)
text(Lon_S_1, Lat_S_1, labels = labels_S, col = col_S, cex = 0.8)
text(Lon_N_1, Lat_N_1, labels = labels_N, col = col_N, cex = 0.8)
# png("./pics/Sejong_map.png")
# shades <- shading(breaks = seq(0, 100, by = 0.1),
#                   cols = colorRampPalette(brewer.pal(11, "Spectral"))(1001))
shades <- shading(breaks = seq(0, 100, by = 0.1),
cols = colorRampPalette(brewer.pal(11, "PiYG"))(1001))
par(mar = c(0, 0, 0, 0), family = "HCR Dotum LVT")
choropleth(shp_S_1, shp_S_1$rates, shading = shades, ylim = c(32, 44))
choropleth(shp_N_1, shp_N_1$rates, shading = shades, add = TRUE)
text(Lon_S_1, Lat_S_1, labels = labels_S, col = col_S, cex = 0.8)
text(Lon_N_1, Lat_N_1, labels = labels_N, col = col_N, cex = 0.8)
# png("./pics/Sejong_map.png")
# shades <- shading(breaks = seq(0, 100, by = 0.1),
#                   cols = colorRampPalette(brewer.pal(11, "Spectral"))(1001))
shades <- shading(breaks = seq(0, 100, by = 0.1),
cols = colorRampPalette(brewer.pal(11, "BrBG"))(1001))
par(mar = c(0, 0, 0, 0), family = "HCR Dotum LVT")
choropleth(shp_S_1, shp_S_1$rates, shading = shades, ylim = c(32, 44))
choropleth(shp_N_1, shp_N_1$rates, shading = shades, add = TRUE)
text(Lon_S_1, Lat_S_1, labels = labels_S, col = col_S, cex = 0.8)
text(Lon_N_1, Lat_N_1, labels = labels_N, col = col_N, cex = 0.8)
# png("./pics/Sejong_map.png")
# shades <- shading(breaks = seq(0, 100, by = 0.1),
#                   cols = colorRampPalette(brewer.pal(11, "Spectral"))(1001))
shades <- shading(breaks = seq(0, 100, by = 0.1),
cols = colorRampPalette(brewer.pal(11, "RdYlGn"))(1001))
par(mar = c(0, 0, 0, 0), family = "HCR Dotum LVT")
choropleth(shp_S_1, shp_S_1$rates, shading = shades, ylim = c(32, 44))
choropleth(shp_N_1, shp_N_1$rates, shading = shades, add = TRUE)
text(Lon_S_1, Lat_S_1, labels = labels_S, col = col_S, cex = 0.8)
text(Lon_N_1, Lat_N_1, labels = labels_N, col = col_N, cex = 0.8)
# png("./pics/Sejong_map.png")
# shades <- shading(breaks = seq(0, 100, by = 0.1),
#                   cols = colorRampPalette(brewer.pal(11, "Spectral"))(1001))
shades <- shading(breaks = seq(0, 100, by = 0.1),
cols = colorRampPalette(brewer.pal(11, "RdYlBu"))(1001))
par(mar = c(0, 0, 0, 0), family = "HCR Dotum LVT")
choropleth(shp_S_1, shp_S_1$rates, shading = shades, ylim = c(32, 44))
choropleth(shp_N_1, shp_N_1$rates, shading = shades, add = TRUE)
text(Lon_S_1, Lat_S_1, labels = labels_S, col = col_S, cex = 0.8)
text(Lon_N_1, Lat_N_1, labels = labels_N, col = col_N, cex = 0.8)
cols <- unique(c(shp_S_1$rates, shp_N_1$rates)) * 10
pie(rep(1, 10), col = colorRampPalette(c("Red", "Pink", "Green", "Cyan"))(1001)[cols])
names(cols) <- c("GS", "CC", "GW", "JL", "GG", "SL", "PA", "HG", "HH", "YH")
cols_hex <- colorRampPalette(brewer.pal(11, "RdYlBu"))(1001)[cols]
names(cols_hex) <- names(cols)
cols_hex
par(mar = c(0, 0, 0, 0))
plot(shp_HG_u, xlim = c(123, 132), ylim = c(32, 44), col = cols_hex["HG"])
plot(shp_PA_u, add = TRUE, col = cols_hex["PA"])
plot(shp_HH_u, add = TRUE, col = cols_hex["HH"])
plot(shp_GW, add = TRUE, col = cols_hex["GW"])
plot(shp_GG_u, add = TRUE, col = cols_hex["GG"])
plot(shp_CC_u, add = TRUE, col = cols_hex["CC"])
plot(shp_JL_u, add = TRUE, col = cols_hex["JL"])
plot(shp_GS_u, add = TRUE, col = cols_hex["GS"])
plot(shp_SL, add = TRUE, col = cols_hex["SL"])
plot(shp_YH, add = TRUE, col = cols_hex["YH"])
install.packages("plotly")
labels_S
library(plot)
library(plotly)
help(package = "plotly")
library(dokyr)
library(dplyr)
mtcars %>%
count(vs) %>%
plot_ly(x = -vs, y = -n) %>%
add_bars()
mtcars %>%
count(vs)
mtcars %>%
count(vs) %>%
plot_ly(x = ~vs, y = ~n) %>%
add_bars()
plot_ly(MASS::geyser, x = ~wating, y = ~duration) %>%
add_histogram2dcontour()
plot_ly(MASS::geyser, x = ~waiting, y = ~duration) %>%
add_histogram2dcontour()
plot_ly(MASS::geyser, x = ~waiting, y = ~duration) %>%
add_plot()
plot_ly(MASS::geyser, x = ~waiting, y = ~duration) %>%
add_boxplot()
plot_ly(MASS::geyser, x = ~waiting, y = ~duration) %>%
add_scattergeo()
help(package = "plotly")
packageVersion("plotly")
?plot_geo
map_data("world", "canada") %>%
group_by(group) %>%
plot_geo(x = -long, y = -lat) %>%
add_markers(size = I(1))
map_data("world", "canada") %>%
group_by(group) %>%
plot_geo(x = ~long, y = ~lat) %>%
add_markers(size = I(1))
choro_S <- choropleth(shp_S_1, shp_S_1$rates, shading = shades, ylim = c(32, 44))
add_trace(choro_S, type = "choropleth"[,
z = ~ rates..%.,
search()
ls()
shp_S1_1_df <- tidy(shp_S1_1)
shp_S1_1_df <- tidy(shp_S_1)
ggplot2() +
geom_polygon(data = shp_S1_1_df, aes(x = long, y = lat, group = group))
ggplot() +
geom_polygon(data = shp_S1_1_df, aes(x = long, y = lat, group = group))
ggplot() +
geom_polygon(data = shp_S1_1_df, aes(x = long, y = lat, group = group)) +
coord_quickmap()
shp_S_df <- tidy(shp_S_1)
shp_N_df <- tidy(shp_N_1)
ggplot() +
geom_polygon(data = shp_S_df, aes(x = long, y = lat, group = group)) +
geom_polygon(data = shp_N_df, aes(x = long, y = lat, group = group)) +
coord_quickmap()
ggplot() +
geom_polygon(data = shp_S_df, aes(x = long, y = lat, group = group),
color = "black", fill = "white") +
geom_polygon(data = shp_N_df, aes(x = long, y = lat, group = group),
color = "black", fill = "white") +
coord_quickmap()
ggplot() +
geom_polygon(data = shp_S_df, aes(x = long, y = lat, group = group),
color = "black", fill = "white") +
geom_polygon(data = shp_N_df, aes(x = long, y = lat, group = group),
color = "black", fill = "white") +
coord_quickmap()
ggplot() +
geom_polygon(data = shp_S_df, aes(x = long, y = lat, group = group),
color = "black", fill = "white") +
geom_polygon(data = shp_N_df, aes(x = long, y = lat, group = group),
color = "black", fill = "white") +
coord_map()
shp_S_df
ggplot() +
geom_map(map = shp_S_df) +
coord_quickmap()
?geom_map
ggplot() +
geom_map(aes(map_id = id), map = shp_S_df) +
coord_quickmap()
ggplot() +
geom_map(aes(map_id = id), map = shp_S_df) +
coord_quickmap()
?geom_map
ids <- factor(c("1.1", "2.1", "1.2", "2.2", "1.3", "2.3"))
ids
values <- data.frame(
id = ids,
value = c(3, 3.1, 3.1, 3.2, 3.15, 3.5)
)
values
positions <- data.frame(
id = rep(ids, each = 4),
x = c(2, 1, 1.1, 2.2, 1, 0, 0.3, 1.1, 2.2, 1.1, 1.2, 2.5, 1.1, 0.3,
0.5, 1.2, 2.5, 1.2, 1.3, 2.7, 1.2, 0.5, 0.6, 1.3),
y = c(-0.5, 0, 1, 0.5, 0, 0.5, 1.5, 1, 0.5, 1, 2.1, 1.7, 1, 1.5,
2.2, 2.1, 1.7, 2.1, 3.2, 2.8, 2.1, 2.2, 3.3, 3.2)
)
positions
ggplot(data = values) + geom_map(aes(map_id = id), map = positions)
ggplot(data = values) + geom_map(aes(map_id = id), map = positions) +
expand_limits(positions)
ggplot(values, aes(fill = value)) +
geom_map(aes(map_id = id), map = positions) +
expand_limits(positions)
ggplot(values, aes(fill = value)) +
geom_map(aes(map_id = id), map = positions) +
expand_limits(positions) + ylim(0, 3)
shp_S_df
str(shp_S_df)
str(shp_N_df)
library(leaflet)
knitr::opts_chunk$set(echo = TRUE)
plot(shp_GW_S)
bbox(shp_GW_u)
bbox(shp_GW_S)
xlim_u <- c(min(bbox(shp(GW_u))[1, 1], bbox(shp(GW_S))[1, 1]),
max(bbox(shp(GW_u))[1, 2], bbox(shp(GW_S))[1, 2]))
xlim_u <- c(min(bbox(shp_GW_u)[1, 1], bbox(shp_GW_S)[1, 1]),
max(bbox(shp_GW_u)[1, 2], bbox(shp_GW_S)[1, 2]))
xlim_u
xlim_u <- c(min(bbox(shp_GW_u)[2, 1], bbox(shp_GW_S)[2, 1]),
max(bbox(shp_GW_u)[2, 2], bbox(shp_GW_S)[2, 2]))
plot(shp_GW_u, xlim = xlim_u, ylim = ylim_u)
ylim_u <- c(min(bbox(shp_GW_u)[2, 1], bbox(shp_GW_S)[2, 1]),
max(bbox(shp_GW_u)[2, 2], bbox(shp_GW_S)[2, 2]))
plot(shp_GW_u, xlim = xlim_u, ylim = ylim_u)
install.packages("iplots")
library(iplots)
help(package = "giraph")
install.packages("giRaph")
help(package = "giRaph")
library(giRaph)
demo()
demo(package = "giRaph")
labels_S_b <- paste(shp_S_1$Names_kr_old[index_S],
paste0(shp_S_1$rates_b[index_S], "%"), sep = ":")
labels_N_b <- paste(shp_N_1$Names_kr_old[index_N],
paste0(shp_N_1$rates_b[index_N], "%"), sep = ":")
labels_S_c <- paste(shp_S_1$Names_kr_old[index_S],
paste0(shp_S_1$rates_c[index_S], "%"), sep = ":")
labels_N_c <- paste(shp_N_1$Names_kr_old[index_N],
paste0(shp_N_1$rates_c[index_N], "%"), sep = ":")
labels_N_c
labels_S_c
library(sf)
library(rgeos)
library(maptools) #> `readShapePoly()`, `rgdal::readOGR()`로 대체
library(GISTools) #> `choropleth`
library(ggmap) #> `geocode()`, `ggmap()`, `qmap()`, `revgeocode()`
library(ggplot2) #> `ggplot()`
library(rgdal) #> `CRS`, `ogrInfo()`, `ogrListLayers()`, `readOGR()`, `spTransform()`
library(dplyr) #> `arrange()`, `filter()`, `group_by()`, `left_join()`, `mutate()`,
library(broom) #> `tidy()`
library(extrafont) #> "HCR Dotum LVT"
options(width = 132)
shp_S <- readOGR(dsn = "../data/KOR_adm",
layer = "KOR_adm1",
stringsAsFactors = FALSE)
shp_S <- readOGR(dsn = "../data/KOR_adm",
layer = "KOR_adm1",
stringsAsFactors = FALSE)
shp_N <- readOGR(dsn = "../data/PRK_adm",
layer = "PRK_adm1",
stringsAsFactors = FALSE)
ogrInfo(dsn = "../data/KOR_adm1",  #> `ogrInfo()`
layer = "KOR_adm1")
ogrInfo(dsn = "../data/KOR_adm1",  #> `ogrInfo()`
layer = "KOR_adm1")
shp_S_1 <- readOGR(dsn = "../data/KOR_adm1",
layer = "KOR_adm1",
stringsAsFactors = FALSE)
ogrInfo(dsn = "../data/PRK_adm1",  #> `ogrInfo()`
layer = "PRK_adm1")
shp_N_1 <- readOGR(dsn = "../data/PRK_adm",
layer = "PRK_adm1",
stringsAsFactors = FALSE)
shp_S_1@data <- shp_S@data
data.frame(shp_S_1)
data.frame(shp_N_1)
class(shp_S_1)
class(shp_N_1)
summary(shp_S_1)
summary(shp_N_1)
coordinates(shp_S_1)
coordinates(shp_N_1)
glimpse(shp_S_1)
glimpse(shp_N_1)
Names_S <- shp_S_1$NL_NAME_1
Names_N <- shp_N_1$NL_NAME_1
shp_S_1$Names_kr <- c("부산", "충북", "충남", "대구", "대전", "강원", "광주", "경기", "경북",
"경남", "인천", "제주", "전북", "전남", "세종", "서울", "울산")
shp_N_1$Names_kr <- c("자강", "함북", "함남", "황북", "황남", "개성", "강원", "금강", "평북",
"평남", "평양", "라선", "량강", "신의")
shp_S_1$Names_kr_old <-
ifelse(shp_S_1$Names_kr %in% c("부산","대구", "경북", "경남", "울산"),
"경상", ifelse(shp_S_1$Names_kr %in% c("광주", "제주", "전북", "전남"),
"전라", ifelse(shp_S_1$Names_kr %in% c("충북", "충남", "대전", "세종"),
"충청", ifelse(shp_S_1$Names_kr %in% c("경기", "인천"),
"경기", ifelse(shp_S_1$Names_kr == "서울",
"서울", "강원")))))
shp_N_1$Names_kr_old <-
ifelse(shp_N_1$Names_kr %in% c("자강","평북", "평남", "평양", "신의"),
"평안", ifelse(shp_N_1$Names_kr %in% c("함북", "함남", "라선", "량강"),
"함길", ifelse(shp_N_1$Names_kr %in% c("황북", "황남"),
"황해", ifelse(shp_N_1$Names_kr %in% c("강원", "금강"),
"강원", "유후"))))
shp_N_1$Names_kr_old
rates <- c(50.7, 94.1, 98.6, 4.5, 22.3, 33.3, 12.0, 1.0, 98.9, 99.1)
names(rates) <- c("서울", "유후", "경기", "평안", "황해", "충청", "강원", "함길", "경상", "전라")
rates
rates_b <- c(50.7, 85.3, 14.3, 50.0, 55.6, 33.3, 16.7, 77.5, 75.0)
names(rates_b) <- c("서울", "경기", "평안", "황해", "충청", "강원", "함길", "경상", "전라")
rates_b
rates_c <- c(94.1, 98.6, 4.4, 22.2, 33.3, 12.0, 1.0, 99.0, 99.1)
names(rates_c) <- c("유후", "경기", "평안", "황해", "충청", "강원", "함길", "경상", "전라")
rates_c
rates_SL <- c(9.8, 39.7, 79.1)
names(rates_SL) <- c("대신", "현직", "전직")
N_SL <- c(215, 652, 560)
match(shp_S_1$Names_kr_old, names(rates_b))
shp_S_1$rates <- rates[match(shp_S_1$Names_kr_old, names(rates))]
shp_S_1$rates_b <- rates_b[match(shp_S_1$Names_kr_old, names(rates_b))]
shp_N_1$rates_c <- rates_c[match(shp_N_1$Names_kr_old, names(rates_b))]
index_S <- shp_S_1$Names_kr %in% c("경북", "대전", "강원", "전북", "경기", "서울")
index_N <- shp_N_1$Names_kr %in% c("개성", "황북", "평남", "함남")
Lon_S <- coordinates(shp_S_1)[, 1]
Lat_S <- coordinates(shp_S_1)[, 2]
Lon_S_1 <- Lon_S[index_S]
Lat_S_1 <- Lat_S[index_S]
Lat_S_1[c(3, 6)] <- Lat_S_1[c(3, 6)] + c(-0.3, 0.2)
Lon_N <- coordinates(shp_N_1)[, 1]
Lat_N <- coordinates(shp_N_1)[, 2]
Lon_N_1 <- Lon_N[index_N]
Lat_N_1 <- Lat_N[index_N]
labels_S_b <- paste(shp_S_1$Names_kr_old[index_S],
paste0(shp_S_1$rates_b[index_S], "%"), sep = ":")
labels_N_b <- paste(shp_N_1$Names_kr_old[index_N],
paste0(shp_N_1$rates_b[index_N], "%"), sep = ":")
labels_S_c <- paste(shp_S_1$Names_kr_old[index_S],
paste0(shp_S_1$rates_c[index_S], "%"), sep = ":")
labels_N_c <- paste(shp_N_1$Names_kr_old[index_N],
paste0(shp_N_1$rates_c[index_N], "%"), sep = ":")
labels_S <- paste(shp_S_1$Names_kr_old[index_S],
paste0(shp_S_1$rates[index_S], "%"), sep = ":")
labels_N <- paste(shp_N_1$Names_kr_old[index_N],
paste0(shp_N_1$rates[index_N], "%"), sep = ":")
labels_N_c
labels_N_b
labels_N_b <- paste(shp_N_1$Names_kr_old[index_N],
paste0(shp_N_1$rates_b[index_N], "%"), sep = ":")
labels_N_b
rates_b
shP_N_1$rates_c
shp_N_1$rates_c
shp_N_1[, c("Names_kr_old", "rates_c")]
shp_N_1@data[, c("Names_kr_old", "rates_c")]
shp_N_1@data[, c("Names_kr_old", "rates_b")]
knitr::opts_chunk$set(echo = TRUE)
shp_GG_u <- gUnaryUnion(shp_GG)
plot(shp_GG_u)
shp_S_1@data
?readOGR
library(rgdal)
?readOGR
?dev.copy
?png
